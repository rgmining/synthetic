[build-system]
build-backend = "poetry.core.masonry.api"

requires = [ "poetry-core>=2" ]

[project]
name = "rgmining-synthetic-dataset"
version = "0.9.4"
description = "A synthetic dataset for Review graph mining project"
readme = "README.rst"
keywords = [ "dataset", "dexa", "graph", "mining", "review" ]
license = "GPL-3.0-only"
authors = [
  { name = "Junpei Kawamoto", email = "kawamoto.junpei@gmail.com" },
]
requires-python = ">=3.10"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Natural Language :: English",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries",
]

dependencies = [
  "click>=8.1",
  "matplotlib>=3.10",
  "numpy>=2.2",
]

urls.documentation = "https://rgmining.github.io/synthetic/"
urls.homepage = "https://rgmining.github.io/synthetic/"
urls.repository = "https://github.com/rgmining/synthetic"
scripts.rgmining-synthetic-dataset = "synthetic.eval.cli:main"

[tool.poetry]
packages = [
  { include = "synthetic" },
]
include = [ "COPYING" ]

[tool.poetry.group.dev.dependencies]
bump-my-version = "^1.0.2"
pre-commit = "^4.1"
pre-commit-uv = "^4.1.4"
pytest = "^8.1.1"
pytest-mock = "^3.7.0"
pytest-cov = "^5.0.0"
mypy = "^1.9.0"
ruff = "^0.11.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"
sphinx-autobuild = "^2024.2.4"

[tool.ruff]
target-version = "py310"
line-length = 120

[tool.pytest.ini_options]
addopts = "--cov=synthetic --cov-branch --cov-report=term-missing --cov-report=xml"

[tool.coverage.report]
exclude_lines = [ "\\.{3}" ]

[tool.bumpversion]
current_version = "0.9.4"
commit = true
pre_commit_hooks = [
  "poetry lock",
  "git add poetry.lock",
]

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "synthetic/__version__.py"

[[tool.bumpversion.files]]
filename = "README.rst"

[[tool.bumpversion.files]]
filename = "docs/source/conf.py"

[tool.mypy]
files = "synthetic/**/*.py,tests/**/*.py"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
  "ria",
  "rsd",
  "fraud_eagle",
  "fraudar",
]
ignore_missing_imports = true
